version: "3"
services:
  traefik:
    image: traefik:v2.0
    command:
      # - "--log.level=info"
      # - "--api.insecure=true" //
      # - "--api.dashboard=true"
      # - "--providers.docker=true"
      # - "--providers.docker.swarmMode=true"
      # - "--providers.docker.watch=true"
      # - "--providers.docker.exposedbydefault=false"
      # - "--entrypoints.web.address=:80"
      # - "--entryPoints.web-secure.address=:443"
      - "--configFile=./traefik.toml"
    ports:
      - "80:80"
      - "443:443"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        # ##################################
        # Base service configuration
        - "traefik.enable=true"
        # ##################################
        # Service service configuration
        - "traefik.http.services.traefik_service.loadbalancer.server.port=8080"
        # ##################################
        # Middlewares serviceconfiguration
        - "traefik.http.middlewares.traefik_redirect.redirectregex.regex=^http://(.*)"
        - "traefik.http.middlewares.traefik_redirect.redirectregex.replacement=https://$$1"
        # - "traefik.http.middlewares.traefik_dashbord_auth.basicauth.users=admin:$$apr1$$1I1ii04B$$HXp60s10NwWKeNsdgQ9xD/"
        # ##################################
        # Insecure (http) router configuration
        - "traefik.http.routers.traefik_insecure.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
        - "traefik.http.routers.traefik_insecure.service=api@internal"
        - "traefik.http.routers.traefik_insecure.rule=Host(`traefik.swarm.olst.io`)"
        - "traefik.http.routers.traefik_insecure.entrypoints=web"
        - "traefik.http.routers.traefik_insecure.middlewares=traefik_redirect"
        # ##################################
        # Secure (https) router configuration
        - "traefik.http.routers.traefik_secure.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
        - "traefik.http.routers.traefik_secure.service=api@internal"
        - "traefik.http.routers.traefik_secure.rule=Host(`traefik.swarm.olst.io`)"
        - "traefik.http.routers.traefik_secure.tls=true"
        - "traefik.http.routers.traefik_secure.entrypoints=web-secure"
        # - "traefik.http.routers.traefik_secure.middlewares=traefik_dashbord_auth"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./traefik.toml:/etc/traefik/traefik.toml"
  # 
  # 
  # 
  visualizer:
    image: dockersamples/visualizer
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        # ##################################
        # Base service configuration
        - "traefik.enable=true"
        # ##################################
        # Service service configuration
        - "traefik.http.services.visualizer_service.loadbalancer.server.port=8080"
        # ##################################
        # Middlewares serviceconfiguration
        - "traefik.http.middlewares.visualizer_redirect.redirectregex.regex=^http://(.*)"
        - "traefik.http.middlewares.visualizer_redirect.redirectregex.replacement=https://$$1"
        # ##################################
        # Insecure (http) router configuration
        - "traefik.http.routers.visualizer_insecure.rule=Host(`visualizer.swarm.olst.io`)"
        - "traefik.http.routers.visualizer_insecure.entrypoints=web"
        - "traefik.http.routers.visualizer_insecure.middlewares=visualizer_redirect"
        - "traefik.http.routers.visualizer_insecure.service=visualizer_service"
        # ##################################
        # Secure (https) router configuration
        - "traefik.http.routers.visualizer_secure.rule=Host(`visualizer.swarm.olst.io`)"
        - "traefik.http.routers.visualizer_secure.tls=true"
        - "traefik.http.routers.visualizer_secure.entrypoints=web-secure"
        - "traefik.http.routers.visualizer_secure.service=visualizer_service"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"